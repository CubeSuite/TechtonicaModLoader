<Application x:Class="TechtonicaModLoader.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TechtonicaModLoader"
             StartupUri="MainWindow.xaml"
             DispatcherUnhandledException="OnUnhandledException">
    <Application.Resources>
         
        <!--Colours-->
        <Color x:Key="dimBackgroundColour">#161626</Color>
        <Color x:Key="backgroundColour">#303040</Color>
        <Color x:Key="brightBackgroundColour">#3A3A58</Color>
        <Color x:Key="uiBackgroundColour">#444462</Color>

        <Color x:Key="accentColour">Orange</Color>
        <Color x:Key="textColour">White</Color>
        
        <!--Brushes-->
        <SolidColorBrush x:Key="dimBackgroundBrush" Color="{DynamicResource dimBackgroundColour}"/>
        <SolidColorBrush x:Key="backgroundBrush" Color="{DynamicResource backgroundColour}"/>
        <SolidColorBrush x:Key="brightBackgroundBrush" Color="{DynamicResource brightBackgroundColour}"/>
        <SolidColorBrush x:Key="uiBackgroundBrush" Color="{DynamicResource uiBackgroundColour}"/>

        <SolidColorBrush x:Key="accentBrush" Color="{DynamicResource accentColour}"/>
        <SolidColorBrush x:Key="textBrush" Color="{DynamicResource textColour}"/>

        <!--Corners-->
        <CornerRadius x:Key="uiCorners">0</CornerRadius>
        <CornerRadius x:Key="borderCorners">10</CornerRadius>
        <CornerRadius x:Key="topCorners">0</CornerRadius>
        <CornerRadius x:Key="bottomCorners">0</CornerRadius>
        
        <!--Styles-->
        <Style x:Key="titleStyle" TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource textBrush}"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="BorderBrush" Value="{DynamicResource accentBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
        </Style>
        <Style x:Key="textStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource textBrush}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style x:Key="highlightTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource accentBrush}"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="textBoxStyle" TargetType="TextBox">
            <Setter Property="Foreground" Value="{DynamicResource textBrush}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="CaretBrush" Value="{DynamicResource textBrush}"/>
        </Style>

        <!--region ScrollViewer Style-->

        <SolidColorBrush x:Key="StandardBorderBrush" Color="{DynamicResource accentColour}"/>
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="{DynamicResource backgroundColour}"/>
        <SolidColorBrush x:Key="HoverBorderBrush" Color="{DynamicResource accentColour}" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
        <SolidColorBrush x:Key="NormalBrush" Color="#888"/>
        <SolidColorBrush x:Key="NormalBorderBrush" Color="{DynamicResource accentColour}"/>
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#888"/>
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888"/>
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0"/>
                    <GradientStop Color="White" Offset="0.6"/>
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <!--SrollViewer ScrollBar Repeat Buttons (at each end)-->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Border Name="Border"  Background="{DynamicResource backgroundBrush}" BorderBrush="{DynamicResource accentBrush}" 
                        CornerRadius="{DynamicResource uiCorners}" BorderThickness="1" Margin="2" RenderTransformOrigin="0.5 0.5">
                                <Border.RenderTransform>
                                    <RotateTransform Angle="-45"/>
                                </Border.RenderTransform>
                            </Border>
                            <Path Fill="{DynamicResource textBrush}" 
                          Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                          HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource brightBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource accentBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid RenderTransformOrigin="0.5 0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="0.7"
                                        ScaleY="0.7"/>
                            </Grid.RenderTransform>
                            <Border Name="Border" Background="{DynamicResource backgroundBrush}" BorderBrush="{DynamicResource accentBrush}" 
                        CornerRadius="{DynamicResource uiCorners}" BorderThickness="1" Margin="2,-1" RenderTransformOrigin="0.5 0.5">
                                <Border.RenderTransform>
                                    <RotateTransform Angle="-45"/>
                                </Border.RenderTransform>
                            </Border>
                            <Path Fill="{DynamicResource textBrush}" 
                          Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                          HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource brightBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource accentBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineButtonUp" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Border Name="Border"  Background="{DynamicResource backgroundBrush}" BorderBrush="{DynamicResource accentBrush}" 
                            CornerRadius="8,0,8,8" BorderThickness="1" Margin="2" RenderTransformOrigin="0.5 0.5">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="-1.5" Y="2"/>
                                        <RotateTransform Angle="-45"/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                            <Path Fill="{DynamicResource accentBrush}" x:Name="UpTriangle"
                          Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                          HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,1,0,0"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource brightBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource accentBrush}"/>
                                <Setter TargetName="UpTriangle" Property="Fill" Value="{DynamicResource accentBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineButtonDown" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Border Name="Border"  Background="{DynamicResource backgroundBrush}" BorderBrush="{DynamicResource accentBrush}" 
                        CornerRadius="8,0,8,8" BorderThickness="1" Margin="2" RenderTransformOrigin="0.5 0.5">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="135"/>
                                        <TranslateTransform X="0" Y="-2"/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                            <Path Fill="{DynamicResource accentBrush}" x:Name="DownButton"
                          Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                          HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource brightBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource accentBrush}"/>
                                <Setter TargetName="DownButton" Property="Fill" Value="{DynamicResource accentBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
    not the thumb the long area between the buttons )-->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollViewer ScrollBar Thumb, that part that can be dragged up/down or left/right Buttons-->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{DynamicResource accentBrush}" BorderThickness="1" CornerRadius="{DynamicResource uiCorners}" Margin="1,-16"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{DynamicResource accentBrush}" BorderThickness="1" CornerRadius="{DynamicResource uiCorners}" Margin="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Vertical Scroll Bar-->
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <Border Background="{DynamicResource backgroundBrush}" BorderBrush="{DynamicResource accentBrush}" 
                BorderThickness="1" CornerRadius="{DynamicResource uiCorners}" Grid.RowSpan="3" Margin="0,0"/>
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButtonUp}" Height="18" Margin="0,0,0,0"
                      Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z"/>
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}"
                       Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Style="{StaticResource ScrollBarLineButtonDown}" Grid.Row="3" Height="18"
                      Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <!--HorizontalScrollBar Template using the previously created Templates-->
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border Background="{DynamicResource backgroundBrush}" BorderBrush="{DynamicResource accentBrush}" 
                BorderThickness="1" CornerRadius="{DynamicResource uiCorners}" Grid.ColumnSpan="3"/>
                <RepeatButton Grid.Column="0" Width="18" Style="{StaticResource HorizontalScrollBarLineButton}"
                      Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" Margin="0,3"/>
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource HorizontalScrollBarThumb}" Margin="0,1,0,1"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource HorizontalScrollBarLineButton}" Width="18"
                      Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" Margin="0,3"/>
            </Grid>
        </ControlTemplate>

        <!--Style for overall  ScrollBar-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18"/>
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Style for overall  ScrollViewer-->
        <Style x:Key="MyScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="1"/>

                            <ScrollBar Name="PART_VerticalScrollBar"
                               Value="{TemplateBinding VerticalOffset}"
                               Maximum="{TemplateBinding ScrollableHeight}"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar"
                               Orientation="Horizontal"
                               Grid.Row="1"
                               Grid.Column="1"
                               Value="{TemplateBinding HorizontalOffset}"
                               Maximum="{TemplateBinding ScrollableWidth}"
                               ViewportSize="{TemplateBinding ViewportWidth}"
                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

    </Application.Resources>
</Application>

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TechtonicaModLoader.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class StringResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TechtonicaModLoader.Resources.StringResources", typeof(StringResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manually browse for Techtonica&apos;s installation location..
        /// </summary>
        internal static string BrowseForGameFolderButtonDescription {
            get {
                return ResourceManager.GetString("BrowseForGameFolderButtonDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for Game Folder.
        /// </summary>
        internal static string BrowseForGameFolderButtonName {
            get {
                return ResourceManager.GetString("BrowseForGameFolderButtonName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse.
        /// </summary>
        internal static string BrowseForGameFolderButtonText {
            get {
                return ResourceManager.GetString("BrowseForGameFolderButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string ButtonTextCancel {
            get {
                return ResourceManager.GetString("ButtonTextCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string ButtonTextClose {
            get {
                return ResourceManager.GetString("ButtonTextClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        internal static string ButtonTextConfirm {
            get {
                return ResourceManager.GetString("ButtonTextConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        internal static string ButtonTextNo {
            get {
                return ResourceManager.GetString("ButtonTextNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        internal static string ButtonTextYes {
            get {
                return ResourceManager.GetString("ButtonTextYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Folder.
        /// </summary>
        internal static string CategoryGameFolder {
            get {
                return ResourceManager.GetString("CategoryGameFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        internal static string CategoryGeneral {
            get {
                return ResourceManager.GetString("CategoryGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod List.
        /// </summary>
        internal static string CategoryModList {
            get {
                return ResourceManager.GetString("CategoryModList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mod list that is displayed when you open Techtonica Mod Loader..
        /// </summary>
        internal static string DefaultModListDescription {
            get {
                return ResourceManager.GetString("DefaultModListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Mod List.
        /// </summary>
        internal static string DefaultModListName {
            get {
                return ResourceManager.GetString("DefaultModListName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default sort option to apply to the mod list..
        /// </summary>
        internal static string DefaultSortOptionDescription {
            get {
                return ResourceManager.GetString("DefaultSortOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Sort Option.
        /// </summary>
        internal static string DefaultSortOptionName {
            get {
                return ResourceManager.GetString("DefaultSortOptionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TML couldn&apos;t delete the folder &apos;{folder}&apos;.\nPlease manually delete it and report this issue..
        /// </summary>
        internal static string DeleteFolderErrorMessage {
            get {
                return ResourceManager.GetString("DeleteFolderErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t Delete Folder.
        /// </summary>
        internal static string DeleteFolderErrorTitle {
            get {
                return ResourceManager.GetString("DeleteFolderErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to deply mods. Please click the bug report button..
        /// </summary>
        internal static string DeployModsErrorMessage {
            get {
                return ResourceManager.GetString("DeployModsErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t Deploy Mods.
        /// </summary>
        internal static string DeployModsErrorTitle {
            get {
                return ResourceManager.GetString("DeployModsErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Have Techtonica Mod Loader search for your Techtonica installation folder..
        /// </summary>
        internal static string FindGameFolderButtonDescription {
            get {
                return ResourceManager.GetString("FindGameFolderButtonDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find Game Folder.
        /// </summary>
        internal static string FindGameFolderButtonName {
            get {
                return ResourceManager.GetString("FindGameFolderButtonName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find.
        /// </summary>
        internal static string FindGameFolderButtonText {
            get {
                return ResourceManager.GetString("FindGameFolderButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Techtonica&apos;s Installation Location..
        /// </summary>
        internal static string GameFolderDescription {
            get {
                return ResourceManager.GetString("GameFolderDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Folder.
        /// </summary>
        internal static string GameFolderName {
            get {
                return ResourceManager.GetString("GameFolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether debug messages should be logged to file. Enable to gather info for a bug report..
        /// </summary>
        internal static string LogDebugMessagesDisplay {
            get {
                return ResourceManager.GetString("LogDebugMessagesDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log Debug Messages.
        /// </summary>
        internal static string LogDebugMessagesName {
            get {
                return ResourceManager.GetString("LogDebugMessagesName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while trying to download this mod.\nPlease click the bug report button..
        /// </summary>
        internal static string ModDownloadErrorMessage {
            get {
                return ResourceManager.GetString("ModDownloadErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t Download {0}.
        /// </summary>
        internal static string ModDownloadErrorTitle {
            get {
                return ResourceManager.GetString("ModDownloadErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alphabetical.
        /// </summary>
        internal static string ModListSortOptionAlphabetical {
            get {
                return ResourceManager.GetString("ModListSortOptionAlphabetical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloads.
        /// </summary>
        internal static string ModListSortOptionDownloads {
            get {
                return ResourceManager.GetString("ModListSortOptionDownloads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Updated.
        /// </summary>
        internal static string ModListSortOptionLastUpdated {
            get {
                return ResourceManager.GetString("ModListSortOptionLastUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Newest.
        /// </summary>
        internal static string ModListSortOptionNewest {
            get {
                return ResourceManager.GetString("ModListSortOptionNewest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Popularity.
        /// </summary>
        internal static string ModListSortOptionPopularity {
            get {
                return ResourceManager.GetString("ModListSortOptionPopularity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        internal static string ModListSourceAll {
            get {
                return ResourceManager.GetString("ModListSourceAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled.
        /// </summary>
        internal static string ModListSourceDisabled {
            get {
                return ResourceManager.GetString("ModListSourceDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloaded.
        /// </summary>
        internal static string ModListSourceDownloaded {
            get {
                return ResourceManager.GetString("ModListSourceDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string ModListSourceEnabled {
            get {
                return ResourceManager.GetString("ModListSourceEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New.
        /// </summary>
        internal static string ModListSourceNew {
            get {
                return ResourceManager.GetString("ModListSourceNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Downloaded.
        /// </summary>
        internal static string ModListSourceNotDownloaded {
            get {
                return ResourceManager.GetString("ModListSourceNotDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled.
        /// </summary>
        internal static string OfflineModListSourceDisabled {
            get {
                return ResourceManager.GetString("OfflineModListSourceDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloaded.
        /// </summary>
        internal static string OfflineModListSourceDownloaded {
            get {
                return ResourceManager.GetString("OfflineModListSourceDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string OfflineModListSourceEnabled {
            get {
                return ResourceManager.GetString("OfflineModListSourceEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Development.
        /// </summary>
        internal static string ProfileDevelopment {
            get {
                return ResourceManager.GetString("ProfileDevelopment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modded.
        /// </summary>
        internal static string ProfileModded {
            get {
                return ResourceManager.GetString("ProfileModded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vanilla.
        /// </summary>
        internal static string ProfileVanilla {
            get {
                return ResourceManager.GetString("ProfileVanilla", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the folder that contains Techtonica Mod Loader&apos;s log file..
        /// </summary>
        internal static string ShowLogInExplorerButtonDescription {
            get {
                return ResourceManager.GetString("ShowLogInExplorerButtonDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Log In Explorer.
        /// </summary>
        internal static string ShowLogInExplorerButtonName {
            get {
                return ResourceManager.GetString("ShowLogInExplorerButtonName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show In Explorer.
        /// </summary>
        internal static string ShowLogInExplorerButtonText {
            get {
                return ResourceManager.GetString("ShowLogInExplorerButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t fetch mods from Thunderstore. Local cache will be loaded instead..
        /// </summary>
        internal static string ThunderstoreConnectErrorMessage {
            get {
                return ResourceManager.GetString("ThunderstoreConnectErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t connect to ThunderStore.
        /// </summary>
        internal static string ThunderstoreConnectErrorTitle {
            get {
                return ResourceManager.GetString("ThunderstoreConnectErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection To ThunderStore has been restored, you can now browse online mods again..
        /// </summary>
        internal static string ThunderstoreReconnectMessage {
            get {
                return ResourceManager.GetString("ThunderstoreReconnectMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reconnected To Thunderstore.
        /// </summary>
        internal static string ThunderstoreReconnectTitle {
            get {
                return ResourceManager.GetString("ThunderstoreReconnectTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to select the file &apos;Techtonica.exe&apos;.
        /// </summary>
        internal static string WrongFileMessage {
            get {
                return ResourceManager.GetString("WrongFileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong File Selected.
        /// </summary>
        internal static string WrongFileTitle {
            get {
                return ResourceManager.GetString("WrongFileTitle", resourceCulture);
            }
        }
    }
}
